function log(logFile, logMessage){    if (typeOf(logFile) === "file"){        logFile.open("a+");        logFile.writeln(new Date() + ": " + logMessage);        logFile.close();         return true;        }    else{        return TypeError("The logFile argument passed in was not actually a File object!")        }    }function createLogFile(loggingType){    loggingType = loggingType || "default";    var logFileDirString = File($.fileName).path + "/logs/"    var logFileDir = new Folder(logFileDirString);    if (!logFileDir.exists){        logFileDir.create();        }    var nowString = getDateTimeString();    var logFileName = nowString + "-" + loggingType + ".log";    var logFilePath = logFileDirString + logFileName;    return logFile = new File(logFilePath);    }function getDateTimeString(){    var theDate = new Date();    var yearOffset = 1900; //years are counted from 1900    var theYear = (theDate.getYear() + yearOffset).toString();     var monthOffset = 1; //january is specified as 0    var theMonth = makeTwoCharString(theDate.getMonth() + monthOffset);    var theDay = makeTwoCharString(theDate.getDate());    var theHours = makeTwoCharString(theDate.getHours());    var theMinutes = makeTwoCharString(theDate.getMinutes());    var theSeconds = makeTwoCharString(theDate.getSeconds());    return theYear + theMonth + theDay + "_" + theHours + theMinutes + theSeconds;    }function makeTwoCharString(intIn){    if (0 <= intIn && intIn < 100) {        return ("00" + intIn.toString()).slice(-2);         }    else{        return RangeError('Input Integer too large (needs more than 2 characters)!');        }    }function typeOf( obj ) {  return ({}).toString.call( obj ).match(/\s(\w+)/)[1].toLowerCase();}